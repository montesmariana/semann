y = "Normalized difference between observed and expected proportions"
)
t = 'heet'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
t = 'geestig'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
t = 'heet'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
agreement %>% filter(confidence <= 1, agree_fct == 'full') %>% select(type, token_id) %>% unique() %>% count(type) %>%
arrange(desc(n))
agreement %>%
filter(confidence >= 4, agree_fct == "none") %>%
select(type, token_id) %>% unique() %>% count(type) %>%
arrange(desc(n))
t = 'herkennen'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
tokens %>%
filter(sense_1 == 'geen'|sense_2 =='geen'|sense_3 == 'geen'| sense_4 == 'geen')
agreement
agreement %>% filter(sense == 'geen')
geen_tokens <- agreement %>% filter(sense == 'geen') %>% pull(token_id) %>% unique()
agreement
agreement %>% filter(token_id %in% geen_tokens)
agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence) %>% write_tsv(paste(input_dir, "geen.tsv"))
concordance_dir <- "C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/Annotation/"
geen <- agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
for (t in unique(geen$type)) {print(t)}
print(nrow(read_tsv))
print(nrow(conc))
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, 'tsv'))
print(nrow(conc))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
print(nrow(conc))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
geen <- left_join(geen, conc, by=c(id = 'token_id'))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
geen <- left_join(geen, conc, by=c(token_id = 'id'))
}
warnings()
geen
geen <- agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
extract_geen <- function(t) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
return(filter(conc, id %in% geen$token_id))
}
geen %>% filter(type == 'blik')
geen %>% filter(type == 'blik') %>% pull(token_id) %>% unique() %>% length
nrow(extract_geen('blik'))
geen_conc <- bind_rows(map(unique(geen$type), extract_geen))
nrow(geen_conc)
geen_conc
geen_conc <- geen_conc %>% select(-X1, -file)
geen %>% join_left(geen_conc, by=c(token_id = 'id'))
geen %>% left_join(geen_conc, by=c(token_id = 'id'))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>% write_tsv(paste0(input_dir, 'geen.tsv'))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator)
str_replace('15_3', '[0-9]+(_[0-9])', ''\\1)
str_replace('15_3', '[0-9]+(_[0-9])', ''\\1')
str_replace('15_3', '[0-9]+(_[0-9])', '\\1')
tokens
return(ann)
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(annotator, '[0-9]+(_[0-9])', 'comments\\1')
return(ann)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
return(ann)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(!!ann) %>% .[1]
return(com)
}))
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
# select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
# select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
})) %>% write_tsv(paste0(input_dir, 'geen.tsv'))
definitions
definitions %>% filter(lemma == 'blik')
definitions %>% filter(lemma == 'dof')
definitions %>% filter(lemma == 'gekleurd')
zwart <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv")
zwart %>% select(sense.woordenschatjes)
defs <- jsonlite::fromJSON("C:/Users/u0118974/xampp/htdocs/mo")
defs <- jsonlite::fromJSON("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/Annotation/woordenschatjes.definitions.json")
defs[['zwart']]
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])})) %>% select(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])})) %>% count(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}})) %>% count(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}}))
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}}))
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}})) %>% write_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv")
read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv") %>% count(sense.woordenschatjes)
library(knitr)
library(rmdformats)
library(kfigr)
library(kableExtra)
library(tidyverse)
library(RColorBrewer)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_hooks$set(fig.cap = function(options){
# in this figr, the first TRUE indicates full caption (include 'Figure')
# FALSE points to adding a link (TRUE when I reference in text)
# the first and last arguments retrieve options from the chunk
first_part = figr(options$label, TRUE, FALSE, options$anchor)
text = options$fig.cap
options$fig.cap = paste0(first_part, ". ", text)
options
})
opts_knit$set(width=75)
input_dir <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/"
tokens <- read_tsv(paste0(input_dir, "token_annotation.tsv"), col_types = cols()) %>%
arrange(type, token_id)
batches_df <- read_tsv(paste0(input_dir, "batches.tsv")) %>%
mutate(username = if_else(username == 'severine.vankessel2', 'severine.vankessel', username))
types <- read_tsv(paste0(input_dir, "types.tsv"))
definitions <- read_tsv(paste0(input_dir, "definitions.tsv"))
definitions %>% filter(lemma == 'gemeen')
definitions %>% filter(lemma == 'gemeen')
definitions %>% filter(lemma == 'grijs')
definitions %>% filter(lemma == 'haken')
definitions %>% filter(lemma == 'haken') %>% pull(definition)
library(knitr)
library(rmdformats)
library(kfigr)
library(kableExtra)
library(tidyverse)
library(RColorBrewer)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_hooks$set(fig.cap = function(options){
# in this figr, the first TRUE indicates full caption (include 'Figure')
# FALSE points to adding a link (TRUE when I reference in text)
# the first and last arguments retrieve options from the chunk
first_part = figr(options$label, TRUE, FALSE, options$anchor)
text = options$fig.cap
options$fig.cap = paste0(first_part, ". ", text)
options
})
opts_knit$set(width=75)
input_dir <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/"
tokens <- read_tsv(paste0(input_dir, "token_annotation.tsv"), col_types = cols()) %>%
arrange(type, token_id)
batches_df <- read_tsv(paste0(input_dir, "batches.tsv")) %>%
mutate(username = if_else(username == 'severine.vankessel2', 'severine.vankessel', username))
types <- read_tsv(paste0(input_dir, "types.tsv"))
definitions <- read_tsv(paste0(input_dir, "definitions.tsv"))
definitions
lemmas <- unique(definitions$lemma)
definitions %>% filter(lemma == lemmas[4])
definitions %>% filter(lemma == lemmas[4]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[5]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[6]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[7]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[8]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[9]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[10]) %>% select(example, definition, my_dist)
i = 10
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
'gloeiend' %in% tokens$type
i = i + 1
'gloeiend' %in% tokens$type
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
length(lemmas)
lemmas
length(unique(tokens$type))
unique(tokens$type)
l2 <- unique(tokens$type)
l2[!l2 %in% lemmas]
'gloeiend' %in% lemmas
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i-1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
lemmas
i
lemmas[11]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist) %>% pull(definition)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist) %>% pull(example)
i
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(definition, example, freq)
definitions <- read_tsv(filename, locale = locale(encoding = 'latin1'))
filename <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/definitions.tsv"
definitions <- read_tsv(filename, locale = locale(encoding = 'latin1'))
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(sense, definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq) %>%
separate(code, into=c('lemma', 'sense'))
d1 <- definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
d1 <- definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
}
show_defs(c('hoopvol', 'geestig', 'hachelijk'))
deframe(count(definitions, lemma))
deframe(count(definitions, lemma))[c('hoopvol', 'geestig')]
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(definitions, lemma))[lemmas])
}
show_defs(c('hoopvol', 'geestig', 'hachelijk'))
show_defs(c('heilzaam', 'gekleurd', 'hoekig', 'dof'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense')) %>%
arrange(lemma, sense)
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
}
show_defs(c('heilzaam', 'gekleurd', 'hoekig', 'dof'))
show_defs(c('geldig', 'hemels', 'gemeen'))
unlink('C:/Users/u0118974/Box Sync/rMarkdown/DutchCaseStudies_cache', recursive = TRUE)
lemmas
lemmas[1:3]
str_c("'", lemmas[1:3], "'")
str_c("'", lemmas[1:3], "'", collapse = ", ")
sort(str_c("'", lemmas[1:3], "'", collapse = ", "))
str_c("'", sort(lemmas[1:3]), "'", collapse = ", ")
library(tidyverse)
ann <- read_tsv("C:/Users/u0118974/Desktop/Subtle Annotator.tsv")
ann
ann <- ann %>% filter(id != 'null')
ann
ann <- ann %>% select(-comments)
conc <- read_tsv("C:/Users/u0118974/Desktop/church.tsv")
ann <- left_join(ann, conc, by='id')
ann
ggplot(ann) + geom_bar(aes(x = variety, fill == sense))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = compound, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip()
ann$id
ann %>% mutate(genre = str_replace(id, "church/n/[a-z_]+([gb])[0-9]+/[0-9]+", "\\1"))
ann <- ann %>% mutate(genre = str_replace(id, "church/n/[a-z_]+([gb])[0-9]+/[0-9]+", "\\1"))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ genre)
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ compound)
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ compound, scales = "free_x")
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip() + facet_wrap(~ sense, scales = "free_x")
The main division of the cloud of models is made by `FOC-WIN`, along the vertical dimension. Each hemisphere has one clear
<!-- ... The stress values of the MDS solutions of these models range between `r format(min(models$stress), digits=3)` and `r format(max(models$stress), digits=3)`. -->
library(knitr)
library(rmdformats)
library(kfigr)
library(kableExtra)
library(tidyverse)
library(cowplot)
library(heatmaply)
library(colorspace)
input_dir <- "./Merges/"
concordance_dir <- "./Concordances/Final/"
# root <- "C:/" # My personal computer
root <- "C:/Users/u0118974/" # My work computer
github_dir <- paste0(root, "xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/data/")
plot_parameters <- function(lemma, colorcoding = NULL, plot = "jitter"){
comp_file <- paste0(github_dir, lemma, "/", lemma, ".models.comp.tsv")
comp <- read_tsv(comp_file, col_types = cols())
one <- comp %>% filter(shared_parameters == max(comp$shared_parameters)-1)
params <- one %>% select(ends_with("_same")) %>% colnames %>% str_remove("_same")
for (p in params){
one[one[[paste0(p, "_same")]]==FALSE, 'different'] <- parameters(p)
}
g <- ggplot(one, aes(x = different, y = distance))
if (plot == "jitter") {
g <- g + geom_jitter(aes_string(color = colorcoding), alpha = 0.8, size = 3) +
labs(color = parameters(colorcoding)) +
scale_colour_discrete_qualitative(palette = "Dark 3")
} else if (plot == "boxplot") {
g <- g + geom_boxplot()
}
g +
labs(x = "Varying parameter", y = "Distance") +
theme(axis.text.x = element_text(angle = 90))
}
plot_parameters("geestig")
parameters <- function(key) {
str_replace(key, "([fs]oc_)?(.+)", "\\2") %>%
str_replace(., "_", "-") %>%
str_to_upper()
}
plot_parameters("geestig")
plot_parameters("geestig", "foc_ppmi")
plot_parameters("geestig", "soc_length")
plot_parameters("geestig", "foc_foc_win")
plot_parameters("geestig", "foc_foc_pos")
plot_parameters("geestig", "foc_ppmi")
install.packages(c("ade4", "backports", "BH", "bibtex", "bookdown", "broom", "ca", "callr", "car", "checkmate", "classInt", "cli", "covr", "crosstalk", "curl", "data.table", "DBI", "dendextend", "devtools", "digest", "dplyr", "DT", "e1071", "FactoMineR", "fansi", "farver", "fBasics", "forcats", "foreach", "fs", "gdtools", "ggplot2", "ggrepel", "gh", "ghyp", "glue", "gplots", "gss", "gtools", "heatmaply", "hexbin", "Hmisc", "hms", "htmlTable", "jsonlite", "knitr", "labelled", "leaps", "lifecycle", "lme4", "lubridate", "maptools", "matrixStats", "mime", "mlogit", "mnormt", "modelr", "modeltools", "multcomp", "mvtnorm", "nloptr", "openxlsx", "party", "pillar", "plotly", "plyr", "prettyunits", "processx", "ps", "psych", "qrNLMM", "quantreg", "Rcpp", "RcppProgress", "RCurl", "Rdpack", "remotes", "repr", "reticulate", "rlang", "rmarkdown", "rmdformats", "roxygen2", "rsconnect", "rstudioapi", "Rttf2pt1", "rversions", "shiny", "shinyWidgets", "slam", "sp", "SparseM", "statmod", "stringi", "survival", "svglite", "testthat", "tibble", "tidyr", "tidyselect", "timeSeries", "tinytex", "tm", "usethis", "uuid", "vcd", "vctrs", "visreg", "xfun", "XML", "xml2", "yaml", "zoo"))
library(tidyverse)
ppmi <- read_tsv(file.choose(), col_types = cols())
ppmi
ppmi %>% filter(str_starts(cw, "John"))
ppmi %>% filter(str_starts(cw, "john"))
ppmi %>% filter(str_starts(cw, "enter"))
ppmi %>% filter(str_starts(cw, "the"))
ppmi %>% filter(str_starts(cw, "vast"))
ppmi %>% filter(str_starts(cw, "and"))
ppmi %>% filter(str_starts(cw, "climb"))
ppmi %>% filter(str_starts(cw, "tower"))
ppmi %>% filter(str_starts(cw, "claimant"))
ppmi %>% filter(str_starts(cw, "loyalty"))
ppmi %>% filter(str_starts(cw, "of"))
ppmi %>% filter(str_starts(cw, "as"))
ppmi %>% filter(str_starts(cw, "breakup"))
h <- .8
c <- .4
b <- 1
v <- function(h, c, b){return((1+b)*h*c/(b*h+c))}
v(h, c, b)
v(.2, .2, 1)
v(.2, .2, 2)
v(h, c, 2)
v(h, c, 0)
library(tidyverse)
adjs <- read_tsv("../Downloads/temperatureAdjectives.tsv")
adjs
adjs <- read_tsv("../Downloads/temperatureAdjectives.tsv") %>% select(-X1)
adjs
setwd("../xampp/htdocs/GitHub/semann/Windows/sample_files/")
adjs %>% filter(lemma == "hot/j") %>% select(-lemma) %>% write_tsv("hot.tsv")
adjs %>% filter(lemma == "warm/j") %>% select(-lemma) %>% write_tsv("warm.tsv")
adjs %>% filter(lemma == "cold/j") %>% select(-lemma) %>% write_tsv("cold.tsv")
adjs %>% select(id, left, target, right, file, lemma) %>% write_tsv("allTemp.tsv")
